{"ast":null,"code":"var _jsxFileName = \"/Users/emmanueliyanu/Documents/React-Apps/Weather-App/src/App.js\";\nimport React, { Component } from 'react';\nimport Weather from './app_component/weather.component';\nimport Form from './app_component/form.component'; // import 'bootstrap/dist/css/bootstrap.min.css'\n// import 'weather-icons/css/weather-icons.css'\n\nconst API_Key = \"\";\n\nclass App extends Component {\n  constructor() {\n    super();\n\n    this.getWeather = async e => {\n      const api_call = await fetch(`http://api.openweathermap.org/data/2.5/weather?q=London,uk&appid=${API_Key}`);\n      const response = await api_call.json();\n      console.log(response);\n      this.setState({\n        city: response.name,\n        country: response.sys.country,\n        celsius: this.calCelsius(response.main.temp),\n        temp_max: this.calCelsius(response.main.temp_max),\n        temp_min: this.calCelsius(response.main.temp_min),\n        description: response.weather[0].description\n      });\n      this.get_WeatherIcon(this.weatherIcon, response.weather[0].id);\n    };\n\n    this.state = {\n      city: undefined,\n      country: undefined,\n      icon: undefined,\n      main: undefined,\n      celsius: undefined,\n      temp_max: undefined,\n      temp_min: undefined,\n      description: '',\n      error: false\n    }; // this.getWeather();\n\n    this.weatherIcon = {\n      Thunderstorm: \"wi-thunderstorm\",\n      Drizzle: \"wi-select\",\n      Rain: \"wi-storm-showers\",\n      Snow: \"wi-snow\",\n      Atmosphere: \"wi-frog\",\n      Clear: \"wi-day-sunny\",\n      Clouds: \"wi-day-fog\"\n    };\n  }\n\n  calCelsius(temp) {\n    let cell = Math.floor(temp - 273.15);\n    return cell;\n  }\n\n  get_WeatherIcon(icons, rangeid) {\n    switch (true) {\n      case rangeid >= 200 && rangeid <= 232:\n        this.setState({\n          icon: this.weatherIcon.Thunderstorm\n        });\n        break;\n\n      case rangeid >= 300 && rangeid <= 321:\n        this.setState({\n          icon: this.weatherIcon.Drizzle\n        });\n        break;\n\n      case rangeid >= 500 && rangeid <= 531:\n        this.setState({\n          icon: this.weatherIcon.Rain\n        });\n        break;\n\n      case rangeid >= 600 && rangeid <= 621:\n        this.setState({\n          icon: this.weatherIcon.Snow\n        });\n        break;\n\n      case rangeid >= 700 && rangeid <= 781:\n        this.setState({\n          icon: this.weatherIcon.Atmosphere\n        });\n        break;\n\n      case rangeid === 800:\n        this.setState({\n          icon: this.weatherIcon.Clear\n        });\n        break;\n\n      case rangeid >= 801 && rangeid <= 804:\n        this.setState({\n          icon: this.weatherIcon.Clouds\n        });\n        break;\n\n      default:\n        this.setState({\n          icon: this.weatherIcon.Clouds\n        });\n    }\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"App\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    }, React.createElement(Form, {\n      loadWeather: this.getWeather,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    }), React.createElement(Weather, {\n      city: this.state.city,\n      country: this.state.country,\n      temp_celsius: this.state.celsius,\n      temp_max: this.state.temp_max,\n      temp_min: this.state.temp_min,\n      description: this.state.description,\n      weatherIcon: this.state.icon,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/emmanueliyanu/Documents/React-Apps/Weather-App/src/App.js"],"names":["React","Component","Weather","Form","API_Key","App","constructor","getWeather","e","api_call","fetch","response","json","console","log","setState","city","name","country","sys","celsius","calCelsius","main","temp","temp_max","temp_min","description","weather","get_WeatherIcon","weatherIcon","id","state","undefined","icon","error","Thunderstorm","Drizzle","Rain","Snow","Atmosphere","Clear","Clouds","cell","Math","floor","icons","rangeid","render"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport Weather from './app_component/weather.component';\nimport Form from './app_component/form.component'\n// import 'bootstrap/dist/css/bootstrap.min.css'\n// import 'weather-icons/css/weather-icons.css'\n\nconst API_Key = \"\";\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      city: undefined,\n      country: undefined,\n      icon: undefined,\n      main: undefined,\n      celsius: undefined,\n      temp_max: undefined,\n      temp_min: undefined,\n      description: '',\n      error: false\n    }\n    // this.getWeather();\n\n    this.weatherIcon = {\n      Thunderstorm: \"wi-thunderstorm\",\n      Drizzle: \"wi-select\",\n      Rain: \"wi-storm-showers\",\n      Snow: \"wi-snow\",\n      Atmosphere: \"wi-frog\",\n      Clear: \"wi-day-sunny\",\n      Clouds: \"wi-day-fog\"\n    }\n  }\n\n  calCelsius(temp) {\n    let cell = Math.floor(temp - 273.15);\n    return cell;\n  }\n  get_WeatherIcon(icons, rangeid) {\n    switch (true) {\n      case rangeid >= 200 && rangeid <= 232:\n        this.setState({ icon: this.weatherIcon.Thunderstorm });\n        break;\n      case rangeid >= 300 && rangeid <= 321:\n        this.setState({ icon: this.weatherIcon.Drizzle });\n        break;\n      case rangeid >= 500 && rangeid <= 531:\n        this.setState({ icon: this.weatherIcon.Rain });\n        break;\n      case rangeid >= 600 && rangeid <= 621:\n        this.setState({ icon: this.weatherIcon.Snow });\n        break;\n      case rangeid >= 700 && rangeid <= 781:\n        this.setState({ icon: this.weatherIcon.Atmosphere });\n        break;\n      case rangeid === 800:\n        this.setState({ icon: this.weatherIcon.Clear });\n        break;\n      case rangeid >= 801 && rangeid <= 804:\n        this.setState({ icon: this.weatherIcon.Clouds });\n        break;\n      default:\n        this.setState({ icon: this.weatherIcon.Clouds })\n    }\n  }\n  getWeather = async (e) => {\n    \n    const api_call = await fetch(`http://api.openweathermap.org/data/2.5/weather?q=London,uk&appid=${API_Key}`);\n    const response = await api_call.json();\n    console.log(response)\n\n    this.setState({\n      city: response.name,\n      country: response.sys.country,\n      celsius: this.calCelsius(response.main.temp),\n      temp_max: this.calCelsius(response.main.temp_max),\n      temp_min: this.calCelsius(response.main.temp_min),\n      description: response.weather[0].description,\n    });\n\n    this.get_WeatherIcon(this.weatherIcon, response.weather[0].id)\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <Form loadWeather={this.getWeather}/>\n        <Weather city={this.state.city}\n          country={this.state.country}\n          temp_celsius={this.state.celsius}\n          temp_max={this.state.temp_max}\n          temp_min={this.state.temp_min}\n          description={this.state.description}\n          weatherIcon={this.state.icon}\n        />\n      </div>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}